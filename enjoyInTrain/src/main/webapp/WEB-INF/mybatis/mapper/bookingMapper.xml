<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="booking">
	
	<!-- 난수 생성 -->	
	<select id="reservationNumber" parameterType="String" resultType="String">
		SELECT LPAD(ROUND(DBMS_RANDOM.VALUE(0, 1) *1000000000000), 12, '0') from dual
	</select>
	<!-- 프로모션 읽어오기 -->
	<select id="readTravel" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pd.pmCode, TO_CHAR(pmStartDate, 'YYYY-MM-DD') pmStartDate, pmEndDate, pmTitle, pmPrice, pmMaxCount, 
			product, productContent, p.traincode, p.startStation, p.endStation
		FROM promotionDetail pd
		JOIN promotion p ON pd.pmCode = p.pmCode
		WHERE pd.pmCode = #{pmCode} AND (p.traincode = #{startTrain} OR p.traincode = #{endTrain})
	</select>
		
	<select id="readCrew" parameterType="map" resultType="com.et.booking.Booking">
		SELECT crewName, crewTel, crewEmail, crewBirth
		FROM crew
		WHERE crewId=#{crewId}
	</select>
	
	<!-- 예약 -->
	<select id="setPrcode" resultType="Integer">
		SELECT pmreservationseq_seq.NEXTVAL FROM dual
	</select>
	<select id="setPrcode1" resultType="Integer">
		SELECT pmreservation_seq.NEXTVAL FROM dual
	</select>
	<insert id="insertReservation" parameterType="com.et.booking.Booking">
			INSERT INTO 
			pmReservation(prCode, prSeq, pmCode, pmStartDate, adult, child, oldMan, prPersonnel, product, productUserCount, crewId, prReservationDate, prPayment, trainCode, reservationNumber)
			VALUES( #{prCode}, #{prSeq}, #{pmCode}, #{pmStartDate}, #{adult}, #{child}, #{oldMan}, #{prPersonnel}, #{product}, #{productUserCount}, #{crewId}, SYSDATE, 0, #{trainCode}, #{reservationNumber})
	</insert>
	<insert id="insertReservation1" parameterType="com.et.booking.Booking">
			INSERT INTO 
			pmReservation(prCode, prSeq, pmCode, pmStartDate, adult, child, oldMan, prPersonnel, product, productUserCount, crewId, prReservationDate, prPayment, trainCode, reservationNumber)
			VALUES( #{prCode}, #{prSeq}, #{pmCode}, #{pmStartDate}, #{adult1}, #{child1}, #{oldMan1}, #{prPersonnel}, #{product}, #{productUserCount}, #{crewId}, SYSDATE, 0, #{trainCode1}, #{reservationNumber})
	</insert>
	
	<update id="updatePayDate" parameterType="Integer">
		UPDATE pmReservation SET prPaymentDate = SYSDATE+3 WHERE prSeq = #{prSeq}
	</update>
	
	<insert id="insertTrain" parameterType="com.et.booking.Booking">
		INSERT INTO pmReservationTrain( ptCode, prCode, trainCode, prPersonnel, prTrainName, prStartStation, roomGrade, roomNum, prEndStation, prTrainSeat, prAddPrice)
		VALUES( pmReservationTrain_seq.NEXTVAL, #{prCode}, #{trainCode}, #{prPersonnel}, #{trainName}, #{startStation}, #{roomGrade}, #{prStartRoom}, #{endStation}, #{prStartTrainSeat},  #{prAddPrice})
	</insert>
	<insert id="insertTrain1" parameterType="com.et.booking.Booking">
		INSERT INTO pmReservationTrain( ptCode, prCode, trainCode, prPersonnel, prTrainName, prStartStation, roomGrade, roomNum, prEndStation, prTrainSeat, prAddPrice)
		VALUES( pmReservationTrain_seq.NEXTVAL, #{prCode}, #{trainCode1}, #{prPersonnel}, #{trainName1}, #{startStation1}, #{roomGrade1}, #{prEndRoom}, #{endStation1}, #{prEndTrainSeat} , #{prAddPrice1})
	</insert>
	
	<!-- 예약 목록 불러오기 -->
	<select id="readReservation" parameterType="map" resultType="com.et.booking.Booking">
		SELECT DISTINCT pr.prCode, pr.prSeq, pr.pmCode, TO_CHAR(pr.pmStartDate, 'YYYY-MM-DD') pmStartDate, pr.adult, pr.child, pr.oldMan, pr.prPersonnel, pr.product, pr.productUserCount, pr.crewId, pr.prReservationDate,pr.prPaymentDate, pr.trainCode,
			    pr.prPayment, pr.reservationNumber, pd.pmTitle, pd.pmPrice, pd.productContent, p.startStation, p.endStation, c.crewName, c.crewEmail, c.crewTel, c.crewBirth, pt.roomGrade, pt.roomNum, pt.prAddPrice, pt.prTrainSeat
		FROM pmReservation pr
		JOIN promotionDetail pd ON pd.pmCode = pr.pmCode
		JOIN promotion p ON pr.trainCode = p.trainCode AND pd.pmCode = p.pmCode
		JOIN crew c ON pr.crewId = c.crewId
		JOIN pmReservationTrain pt ON pr.prCode = pt.prCode AND pr.trainCode = pt.trainCode
		WHERE pr.prSeq = #{prSeq} AND pr.crewId = #{crewId}
	</select>
	
	<select id="listStation" resultType="com.et.travel.Station">
		SELECT sCode, sName, line, lineOrder, engName
		FROM station
		ORDER BY sCode DESC
	</select>

	<select id="readPromotion" parameterType="String" resultType="com.et.travel.Travel">
		SELECT pmCode, trainCode
		FROM promotion
		WHERE pmCode= #{trainCode};
	</select>
	
	<!-- 결제 -->
	<update id="updatePrPayment" parameterType="Integer">
		UPDATE pmReservation SET prPayment = 1 WHERE prSeq=#{prSeq}
	</update>
	<!-- 예약 취소 -->
	<select id="readForCancle" parameterType="map" resultType="com.et.booking.Booking">
		SELECT prCode, prSeq, pmCode, TO_CHAR(pmStartDate, 'YYYY-MM-DD') pmStartDate, adult, child, oldMan, prPersonnel, product, productUserCount, crewId, prReservationDate, trainCode,
			   reservationNumber
		FROM pmReservation WHERE prSeq = #{prSeq} 
			AND crewId = #{crewId}
	</select>
	
	<delete id="deleteReservation" parameterType="map">
		DELETE FROM pmReservation WHERE prSeq = #{prSeq}
		<if test="crewId != null and crewId !='a' ">
			AND crewId = #{crewId}
		</if>
	</delete>
	<!-- 관리자 강제 예약 취소  -->
	<select id="adminCancle" parameterType="map" resultType="com.et.booking.Booking">
		SELECT prCode, prSeq, pmCode, TO_CHAR(pmStartDate, 'YYYY-MM-DD') pmStartDate, adult, child, oldMan, prPersonnel, product, productUserCount, crewId, prReservationDate, trainCode,
			   reservationNumber
		FROM pmReservation WHERE prSeq = #{prSeq} 
	</select>
	<delete id="deleteReservationAdmin" parameterType="map">
		DELETE FROM pmReservation WHERE prSeq = #{prSeq}
	</delete>
	<!-- 예약 리스트 출력 -->
	<select id="reservationCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM pmReservation 
	</select>
	
	
	<select id="listReservation" parameterType="map" resultType="com.et.booking.Booking">
		SELECT DISTINCT pr.prCode, pr.prSeq, pr.pmCode, TO_CHAR(pr.pmStartDate, 'YYYY-MM-DD') pmStartDate, pr.adult, pr.child, pr.oldMan, pr.prPersonnel, pr.product, pr.productUserCount, pr.crewId, pr.prReservationDate,pr.prPaymentDate, pr.trainCode,
			    pr.prPayment, pr.reservationNumber, pd.pmTitle, pd.pmPrice, pd.productContent, p.startStation, p.endStation, c.crewName, c.crewEmail, c.crewTel, c.crewBirth, pt.roomGrade, pt.roomNum, pt.prAddPrice, pt.prTrainSeat
		FROM pmReservation pr
		JOIN promotionDetail pd ON pd.pmCode = pr.pmCode
		JOIN promotion p ON pr.trainCode = p.trainCode AND pd.pmCode = p.pmCode
		JOIN crew c ON pr.crewId = c.crewId
		JOIN pmReservationTrain pt ON pr.prCode = pt.prCode AND pr.trainCode = pt.trainCode
		ORDER BY pr.prCode DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>

	<!--  짝수 : 하행선 -->
	<select id="startlist1" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, startStation, endStation
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 0
	</select>
	
	<select id="startlist2" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, p.trainCode, trainName, startStation, endStation, ${startStation} startTime, ${endStation} endTime
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 0
	</select>
	
	<!-- 홀수 : 상행선 -->
	<select id="endlist1" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, startStation, endStation
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 1
	</select>
	
	<select id="endlist2" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, p.trainCode, trainName, startStation, endStation, ${endStation} endTime, ${startStation} startTime
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 1
	</select>
	
	<!-- 기차 시간, 이름 가져오기 -->
	<select id="getTrain">
		SELECT pmCode, p.trainCode, startStation, endStation
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND p.trainCode = #{trainCode}
	</select>
	<select id="getKoreaStart" parameterType="String" resultType="String">
		SELECT sName FROM station WHERE engName = #{startStation}
	</select>
	
	<select id="getKoreaEnd" parameterType="String" resultType="String">
		SELECT sName FROM station WHERE engName = #{endStation}
	</select>
	
	<select id="trainRead" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, p.trainCode, trainName, startStation, endStation, ${startStation} startTime , ${endStation} endTime
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND p.trainCode = #{trainCode}
	</select>

	<!-- 역 코드로 변환 -->
	<select id="readStationCode" parameterType="com.et.booking.Booking" resultType="String">
		SELECT sCode FROM station WHERE engName = #{startStation}
	</select>
	
	<select id="readStationCode1" parameterType="com.et.booking.Booking" resultType="String">
		SELECT sCode FROM station WHERE engName = #{endStation}
	</select>
		
	<!-- 요금 가져오기 -->
	<select id="readsPay1" parameterType="com.et.booking.Booking" resultType="Integer">
		SELECT (seat2 - seat1) prAddprice FROM spay7
		WHERE startCode=#{startCode} AND endCode=#{endCode} AND trainCategory=#{trainName}
	</select>
	<select id="readsPay" parameterType="com.et.booking.Booking" resultType="Integer">
		SELECT (seat2 - seat1) prAddprice FROM spay7
		WHERE startCode=#{endCode} AND endCode=#{startCode} AND trainCategory=#{trainName}
	</select>
	
	<!-- 최대인원 업데이트 -->
	<update id="updateStock" parameterType="com.et.booking.Booking">
		UPDATE promotionDetail SET stock = stock+#{prPersonnel} WHERE pmCode = #{pmCode}
	</update>
	
	<update id="updateStock1" parameterType="com.et.booking.Booking">
		UPDATE promotionDetail SET stock = stock-#{prPersonnel} WHERE pmCode = #{pmCode}
	</update>
	
	<sql id="where-list">
		<choose>
			<when test="condition == 'promotionName' ">
			   ( INSTR(pmtitle, #{keyword}) &gt; 0
		          OR DBMS_LOB.INSTR(lostContent, #{keyword}) &gt; 0 )
			</when>
			<when test="condition == 'reservationDate' ">
			   ( TO_CHAR(prReservationDate, 'YYYYMMDD') = #{keyword}
		          OR TO_CHAR(prReservationDate, 'YYYY-MM-DD') = #{keyword} )
			</when>
			<when test="condition == 'userName'">
			    INSTR(crewName, #{keyword}) &gt; 0
			</when>
			<otherwise>
			    INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>
	
</mapper>