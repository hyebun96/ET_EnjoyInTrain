<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="booking">
	
	<!-- 난수 생성 -->	
	<select id="reservationNumber" parameterType="String" resultType="String">
		SELECT LPAD(ROUND(DBMS_RANDOM.VALUE(0, 1) *1000000000000), 12, '0') from dual
	</select>
	<!-- 프로모션 읽어오기 -->
	<select id="readTravel" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pd.pmCode, TO_CHAR(pmStartDate, 'YYYY-MM-DD') pmStartDate, pmEndDate, pmTitle, pmPrice, pmMaxCount, 
			product, productContent, p.traincode, p.startStation, p.endStation
		FROM promotionDetail pd
		JOIN promotion p ON pd.pmCode = p.pmCode
		WHERE pd.pmCode = #{pmCode} AND (p.traincode = #{startTrain} OR p.traincode = #{endTrain})
	</select>
		
	<select id="readCrew" parameterType="map" resultType="com.et.booking.Booking">
		SELECT crewName, crewTel, crewEmail, crewBirth
		FROM crew
		WHERE crewId=#{crewId}
	</select>
	
	<!-- 예약 -->
	<select id="setPrcode" resultType="Integer">
		SELECT pmreservationseq_seq.NEXTVAL FROM dual
	</select>
	<insert id="insertReservation" parameterType="com.et.booking.Booking">
			INSERT INTO 
			pmReservation(prCode, prSeq, pmCode, pmStartDate, adult, child, oldMan, prPersonnel, product, productUserCount, prAddPrice, crewId, prReservationDate, prPayment, trainCode, roomGrade, reservationNumber)
			VALUES( pmreservation_seq.NEXTVAL, #{prSeq}, #{pmCode}, #{pmStartDate}, #{adult}, #{child}, #{oldMan}, #{prPersonnel}, #{product}, #{productUserCount}, #{prAddPrice}, #{crewId}, SYSDATE, 0, #{trainCode}, #{roomGrade}, #{reservationNumber})
	</insert>
	
	<update id="updatePayDate" parameterType="Integer">
		UPDATE pmReservation SET prPaymentDate = SYSDATE+3 WHERE prSeq = #{prSeq}
	</update>
	
	<!-- 예약 목록 불러오기 -->
	<select id="readReservation" parameterType="map" resultType="com.et.booking.Booking">
		SELECT DISTINCT pr.prCode, pr.prSeq, pr.pmCode, TO_CHAR(pr.pmStartDate, 'YYYY-MM-DD') pmStartDate, pr.adult, pr.child, pr.oldMan, pr.prPersonnel, pr.product, pr.productUserCount, pr.prAddPrice, pr.crewId, pr.prReservationDate,pr.prPaymentDate, pr.trainCode,
			   pr.roomGrade, pr.reservationNumber, pd.pmTitle, pd.pmPrice, pd.productContent, p.startStation, p.endStation, c.crewName, c.crewEmail, c.crewTel, c.crewBirth
		FROM pmReservation pr
		JOIN promotionDetail pd ON pd.pmCode = pr.pmCode
		JOIN promotion p ON pr.trainCode = p.trainCode
		JOIN crew c ON pr.crewId = c.crewId
		WHERE pr.prSeq = #{prSeq} AND pr.crewId = #{crewId}
	</select>
	
	<select id="listStation" resultType="com.et.travel.Station">
		SELECT sCode, sName, line, lineOrder, engName
		FROM station
		ORDER BY sCode DESC
	</select>

	<select id="readPromotion" parameterType="String" resultType="com.et.travel.Travel">
		SELECT pmCode, trainCode
		FROM promotion
		WHERE pmCode= #{trainCode};
	</select>
	
	<!-- 결제 -->
	<update id="updatePrPaymentDate">
		UPDATE pmReservation SET prPaymentDate = SYSDATE+3 WHERE prCode = #{prCode}
	</update>
	<!-- 예약 취소 -->
	<select id="readForCancle" parameterType="map" resultType="com.et.booking.Booking">
		SELECT prCode, prSeq, pmCode, TO_CHAR(pmStartDate, 'YYYY-MM-DD') pmStartDate, adult, child, oldMan, prPersonnel, product, productUserCount, prAddPrice, crewId, prReservationDate, trainCode,
			   roomGrade, reservationNumber
		FROM pmReservation WHERE prSeq = #{prSeq} AND crewId = #{crewId}
	</select>
	
	<delete id="deleteReservation" parameterType="map">
		DELETE FROM pmReservation WHERE prSeq = #{prSeq} AND crewId = #{crewId}
	</delete>
	
	<!-- 예약 리스트 출력 -->
	<select id="listReservation" parameterType="map" resultType="com.et.booking.Booking">
		SELECT distinct pr.prCode, pr.prSeq, pr.pmCode, TO_CHAR(pr.pmStartDate, 'YYYY-MM-DD') pmStartDate, pr.adult, pr.child, pr.oldMan, pr.prPersonnel, pr.product, pr.productUserCount, pr.prAddPrice, pr.crewId, pr.prReservationDate, pr.trainCode,
			   pr.roomGrade, pr.reservationNumber, pd.pmTitle, pd.pmPrice, pd.productContent, p.startStation, p.endStation
		FROM pmReservation pr
		JOIN promotionDetail pd ON pd.pmCode = pr.pmCode
		JOIN promotion p ON pr.pmCode = p.pmCode AND pr.trainCode = p.trainCode
        JOIN crew c ON pr.crewId = c.crewId
		WHERE pr.prSeq = ${prSeq} AND pr.crewId = ${crewId} AND pr.pmCode = ${pmCode};
	</select>

	<!--  짝수 : 하행선 -->
	<select id="startlist1" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, startStation, endStation
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 0
	</select>
	
	<select id="startlist2" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, p.trainCode, trainName, startStation, endStation, ${startStation} startTime, ${endStation} endTime
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 0
	</select>
	
	<!-- 홀수 : 상행선 -->
	<select id="endlist1" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, startStation, endStation
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 1
	</select>
	
	<select id="endlist2" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, p.trainCode, trainName, startStation, endStation, ${endStation} endTime, ${startStation} startTime
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND MOD(p.trainCode,2) = 1
	</select>
	
	<!-- 기차 시간, 이름 가져오기 -->
	<select id="getTrain">
		SELECT pmCode, p.trainCode, startStation, endStation
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND p.trainCode = #{trainCode}
	</select>
	<select id="getKoreaStart" parameterType="String" resultType="String">
		SELECT sName FROM station WHERE engName = #{startStation}
	</select>
	
	<select id="getKoreaEnd" parameterType="String" resultType="String">
		SELECT sName FROM station WHERE engName = #{endStation}
	</select>
	
	<select id="trainRead" parameterType="map" resultType="com.et.booking.Booking">
		SELECT pmCode, p.trainCode, trainName, startStation, endStation, ${startStation} startTime , ${endStation} endTime
		FROM promotion p
		JOIN STATIONLINE6 t ON p.traincode = t.traincode
		WHERE pmCode = #{pmCode} AND p.trainCode = #{trainCode}
	</select>
	
	<!-- 좌석 행열 가져오기 -->
	<select id="readSeat" parameterType="map" resultType="com.et.reservation.Seat">
		SELECT roomNum, roomGrade, seatRow, seatColumn FROM trainsetting7
		WHERE trainCategory=#{tCategory} AND roomNum=#{roomNum}
	</select>
	
	<select id="listSeat" parameterType="String" resultType="com.et.reservation.Seat">
		SELECT roomNum, roomGrade, seatRow, seatColumn FROM trainsetting7
		WHERE trainCategory=#{tCategory}
	</select>
	
	<!-- 요금 가져오기 -->
	<select id="readsPay" parameterType="map" resultType="Integer">
		SELECT ${seatPay} FROM spay6
		WHERE startCode=#{startCode} AND endCode=#{endCode} AND trainCategory=#{trainCategory}
	</select>

	<!-- 상행인지 하행인지 계산하기 -->	
	<select id="searchRoute" parameterType="map" resultType="String">
		SELECT sname FROM station6 WHERE line=(
    		SELECT line FROM(
        		SELECT line, COUNT(*) cnt FROM station6 
        		WHERE sname=#{startSt} OR sname=#{endSt}
        		GROUP BY line
    		) 
    		WHERE cnt=2
    	)
 		AND sname=#{startSt} OR sname=#{endSt}
 		ORDER BY lineorder
	</select>
	<!-- 역이름 영어, 코드로 가져오기 -->
	<select id="readStation" parameterType="Object" resultType="map">
		SELECT engName, sCode FROM station6
		WHERE sName=#{station}
	</select>
	
	<!-- 시간표 가져오기 -->
	<select id="listTrain" parameterType="com.et.reservation.Condition" resultType="com.et.reservation.Train">
		SELECT trainCode, trainName, departureTime, arriveTime FROM (
    		SELECT trainCode, trainName, ${startSt} departureTime, ${endSt} arriveTime
    		FROM stationline7)
		WHERE departureTime IS NOT NULL AND arriveTime IS NOT NULL
			AND SUBSTR(departureTime,1,2)>=#{time}
			AND TO_DATE(arriveTime,'HH24:MI')-TO_DATE(departureTime,'HH24:MI')>0
			AND MOD(trainCode,2)=#{route}
			AND trainName=#{tCategory}
		ORDER BY departuretime ASC
	</select>
	
	<select id="totalTime" parameterType="com.et.reservation.Train" resultType="Integer">
		SELECT ROUND((TO_DATE(#{arriveTime},'HH24:MI')-TO_DATE(#{departureTime},'HH24:MI'))*24*60*60/60)
		FROM dual
	</select>
	
	<!-- 최대인원 업데이트 -->
	<update id="updateStock" parameterType="com.et.booking.Booking">
		UPDATE promotionDetail SET stock = stock+#{prPersonnel} WHERE pmCode = #{pmCode}
	</update>
	
	<update id="updateStock1" parameterType="com.et.booking.Booking">
		UPDATE promotionDetail SET stock = stock-#{prPersonnel} WHERE pmCode = #{pmCode}
	</update>
	
	
</mapper>