<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reservation">
	<select id="listStation" resultType="com.et.reservation.Station">
		SELECT DISTINCT sname FROM station6
	</select>
	
	<!-- 역정보 가져오기 -->
	<select id="readStation" parameterType="Object" resultType="map">
		SELECT engName, sCode, lineOrder FROM station6
		WHERE sName=#{station}
	</select>
	
	<!-- 시간표 가져오기 -->
	<select id="listTrain" parameterType="com.et.reservation.Condition" resultType="com.et.reservation.Train">
		SELECT trainCode, trainName, departureTime, arriveTime FROM (
    		SELECT trainCode, trainName, ${startSt} departureTime, ${endSt} arriveTime
    		FROM stationline7)
		WHERE departureTime IS NOT NULL AND arriveTime IS NOT NULL
			AND SUBSTR(departureTime,1,2)>=#{time}
			AND TO_DATE(arriveTime,'HH24:MI')-TO_DATE(departureTime,'HH24:MI')>0
			AND MOD(trainCode,2)=#{route}
			AND trainName=#{tCategory}
		ORDER BY departuretime ASC
	</select>
	
	<select id="firstSt" resultType="String">
		SELECT sName
		FROM timetable7 tt 
		JOIN station6 st ON tt.firstCode=st.sCode
		WHERE ttCode=1
	</select>
	
	<select id="lastSt" resultType="String">
		SELECT sName
		FROM timetable7 tt 
		JOIN station6 st ON tt.lastCode=st.sCode
		WHERE ttCode=1
	</select>
	
	<!-- 소요시간 계산 -->
	<select id="totalTime" parameterType="com.et.reservation.Train" resultType="Integer">
		SELECT ROUND((TO_DATE(#{arriveTime},'HH24:MI')-TO_DATE(#{departureTime},'HH24:MI'))*24*60*60/60)
		FROM dual
	</select>
	
	<!-- 상행인지 하행인지 계산하기 -->
	<select id="searchRoute" parameterType="map" resultType="String">
		SELECT sname FROM station6 WHERE line=(
    		SELECT line FROM(
        		SELECT line, COUNT(*) cnt FROM station6 
        		WHERE sname=#{startSt} OR sname=#{endSt}
        		GROUP BY line
    		) 
    		WHERE cnt=2
    	)
 		AND sname=#{startSt} OR sname=#{endSt}
 		ORDER BY lineorder
	</select>
	
	<!-- 좌석 행열 가져오기 -->
	<select id="readseat" parameterType="map" resultType="com.et.reservation.Seat">
		SELECT roomNum, roomGrade, seatRow, seatColumn FROM trainsetting7
		WHERE trainCategory=#{tCategory} AND roomNum=#{roomNum}
	</select>
	
	<select id="listSeat" parameterType="map" resultType="com.et.reservation.Seat">
		SELECT roomNum, roomGrade, seatRow, seatColumn FROM trainsetting7
		WHERE trainCategory=#{tCategory} AND roomGrade=#{roomGrade}
	</select>
	
	<!-- 요금 가져오기 -->
	<select id="readsPay" parameterType="map" resultType="Integer">
		SELECT ${seatPay} FROM spay7
		WHERE startCode=#{startCode} AND endCode=#{endCode} AND trainCategory=#{trainCategory}
	</select>
	
	<!-- trainreservation 시퀀스 가져오기 -->
	<select id="trainreservationSeq" resultType="Integer">
		SELECT trainreservation_seq.NEXTVAL FROM dual
	</select>
	
	<!-- reservedSeat 시퀀스 가져오기 -->
	<select id="reservedSeatSeq" resultType="Integer">
		SELECT reservedSeat_seq.NEXTVAL FROM dual
	</select>
	
	<!-- 기차(좌석)예약하기 -->
	<insert id="insertReservation" parameterType="com.et.reservation.Reservation">
		INSERT INTO trainreservation(trCode, trDate) VALUES(#{trCode},#{trDate})
	</insert>
	
	<insert id="insertReservationInfo" parameterType="com.et.reservation.Reservation">
		INSERT INTO trReservationInfo(trCode, startCode, endCode, trainCode) VALUES(#{trCode},#{startCode},#{endCode},#{trainCode})
	</insert>
	
	<insert id="insertReservedSeat" parameterType="com.et.reservation.ReservedSeat">
		INSERT INTO reservedSeat(rsSeatCode, seatNum, trCode, seatType, seatPay, roomNum, trainCode) 
		VALUES(#{rsSeatCode},#{seatNum},#{trCode},#{seatType},#{seatPay},#{roomNum},#{trainCode})
	</insert>
	
	<!-- 날짜, 기차코드, 칸번호에 해당하는 예약된 좌석 가져오기 -->
	<select id="listReservedSeat" parameterType="map" resultType="String">
		SELECT rs.seatNum
		FROM reservedSeat rs
		JOIN trainreservation tr ON rs.trCode=tr.trCode
		JOIN trReservationInfo info ON info.trCode=tr.trCode
		JOIN station6 st ON st.sCode=info.startCode
		JOIN station6 st2 ON st2.sCode=info.endCode
		WHERE tr.trDate=#{trDate} AND rs.trainCode=#{trainCode} AND rs.roomNum=#{roomNum}
		<if test="trainCode%2==1">
		    AND ((#{stLineOrder} BETWEEN st.lineOrder AND st2.lineOrder-1) OR (#{endLineOrder} BETWEEN st.lineOrder+1 AND st2.lineOrder)
		        OR (#{stLineOrder} &lt; st.lineOrder AND #{endLineOrder} &gt; st2.lineOrder))
		</if>
		<if test="trainCode%2==0">
		    AND ((#{stLineOrder} BETWEEN st2.lineOrder+1 AND st.lineOrder) OR (#{endLineOrder} BETWEEN st2.lineOrder AND st.lineOrder-1) 
        		OR (#{stLineOrder} &gt; st.lineOrder AND #{endLineOrder} &lt; st2.lineOrder))
		</if>
	</select>
	
	<select id="spRoomFirst" parameterType="map" resultType="Integer">
		SELECT roomNum FROM trainsetting7
		WHERE trainCategory=#{tCategory} AND roomGrade='특실' AND ROWNUM=1
		ORDER BY roomNum
	</select>
	
	<!-- 좌석 정원초과 검색하기 -->
	<select id="fullSeat" parameterType="map" resultType="String">
		SELECT rs.roomNum FROM(
		    SELECT rs.roomNum, COUNT(*) cnt
		    FROM reservedSeat rs
		    JOIN trainreservation tr ON rs.trCode=tr.trCode
		    JOIN trReservationInfo info ON info.trCode=tr.trCode
		    JOIN station6 st ON st.sCode=info.startCode
		    JOIN station6 st2 ON st2.sCode=info.endCode
		    WHERE tr.trDate=#{trDate} AND rs.trainCode=#{trainCode}
		    <if test="trainCode%2==1">
		    AND ((#{stLineOrder} BETWEEN st.lineOrder AND st2.lineOrder-1) OR (#{endLineOrder} BETWEEN st.lineOrder+1 AND st2.lineOrder)
		        OR (#{stLineOrder} &lt; st.lineOrder AND #{endLineOrder} &gt; st2.lineOrder))
			</if>
			<if test="trainCode%2==0">
			    AND ((#{stLineOrder} BETWEEN st2.lineOrder+1 AND st.lineOrder) OR (#{endLineOrder} BETWEEN st2.lineOrder AND st.lineOrder-1) 
	        		OR (#{stLineOrder} &gt; st.lineOrder AND #{endLineOrder} &lt; st2.lineOrder))
			</if>
		    GROUP BY rs.roomNum
		) rs
		JOIN trainsetting7 trseat ON rs.roomNum=trseat.roomNum
		WHERE trseat.traincategory=#{tCategory} AND cnt=trseat.seatRow*trseat.seatColumn
	</select>
	
	<!-- 좌석부족인 기차코드 가져오기 -->
	<select id="fulltrCode" parameterType="map" resultType="Integer">
		SELECT trainCode FROM(
		    SELECT trainCode, COUNT(*) roomCnt  FROM(
		        SELECT rs.trainCode, rs.roomNum, COUNT(*) cnt
		        FROM reservedSeat rs
		        JOIN trainreservation tr ON rs.trCode=tr.trCode
		        JOIN trReservationInfo info ON info.trCode=tr.trCode
		        JOIN station6 st ON st.sCode=info.startCode
		        JOIN station6 st2 ON st2.sCode=info.endCode
		        WHERE tr.trDate=#{trDate} 
		        <if test="route==1">
			    AND ((#{stLineOrder} BETWEEN st.lineOrder AND st2.lineOrder-1) OR (#{endLineOrder} BETWEEN st.lineOrder+1 AND st2.lineOrder)
			        OR (#{stLineOrder} &lt; st.lineOrder AND #{endLineOrder} &gt; st2.lineOrder))
				</if>
				<if test="route==0">
				    AND ((#{stLineOrder} BETWEEN st2.lineOrder+1 AND st.lineOrder) OR (#{endLineOrder} BETWEEN st2.lineOrder AND st.lineOrder-1) 
		        		OR (#{stLineOrder} &gt; st.lineOrder AND #{endLineOrder} &lt; st2.lineOrder))
				</if>
		        GROUP BY rs.trainCode, rs.roomNum
		    ) rs
		    JOIN trainsetting7 trseat ON rs.roomNum=trseat.roomNum
		    WHERE cnt=trseat.seatRow*trseat.seatColumn AND trseat.roomGrade=#{roomGrade}
		    GROUP BY trainCode
		)WHERE roomCnt=(
		    SELECT COUNT(*) 
		    FROM trainsetting7
		    WHERE roomGrade=#{roomGrade}
		)
	</select>
	
 </mapper>