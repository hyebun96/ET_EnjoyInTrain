<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">
	<select id="seq" resultType="Integer">
		SELECT notice_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertNotice" parameterType="com.et.notice.Notice">
		INSERT INTO notice(noticeNum, noticeTitle, noticeContent, nHitCount, nCreated, nLikeCount, emCode)
				VALUES(#{noticeNum}, #{noticeTitle},
					#{noticeContent}, 0, SYSDATE, 0, #{emCode})
	</insert>

	<sql id="where-list">
		<choose>
		<when test="condition=='all' ">
			( INSTR(noticeTitle, #{keyword}) &gt; 0
				OR DBMS_LOB.INSTR(noticeContent, #{keyword}) &gt; 0 )
		</when>
		<when test="condition=='noticeTitle' ">
			INSTR(noticeTitle, #{keyword}) &gt; 0
		</when>
		<when test="condition=='noticeContent' ">
			DBMS_LOB.INSTR( noticeContent, #{keyword}) &gt; 0 
		</when>
		<when test="condition=='nCreated' ">
			( TO_CHAR(nCreated, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(nCreated, 'YYYYMMDD') = #{keyword} )
		</when>
		<otherwise>
			INSTR(${condition}, #{keyword}) &gt; 0
		</otherwise>
		</choose>
	</sql>
	
	<!-- 공지 글  리스트 -->
	<select id="listNoticeTop" resultType="com.et.notice.Notice">
		SELECT n.noticeNum, noticeTitle, nhitCount, 
				TO_CHAR(nCreated, 'YYYY-MM-DD') nCreated, NVL(fileCount, 0) fileCount
		FROM notice n
		LEFT OUTER JOIN (
			SELECT noticeNum, count(*) fileCount from noticeFile
			group by noticeNum
		) f on n.noticeNum = f.noticeNum 
		 order by noticeNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	</select>
	
	<!-- 데이터개수  -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM notice 
		<where>
			<if test="keyword != null and keyword!=''  ">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<!-- 리스트 -->
	<select id="listNotice" parameterType="map" resultType="com.et.notice.Notice">
		SELECT nn.noticeNum, noticeTitle, nhitCount, 
		       nCreated, NVL(fileCount, 0) fileCount
		FROM notice nn
		LEFT OUTER JOIN (
			SELECT noticeNum, count(*) fileCount from noticeFile
			group by noticeNum
		) f on nn.noticeNum = f.noticeNum		
		<where>
			<if test="keyword != null and keyword!=''  ">
				<include refid="where-list"/>
			</if>
		</where>
		ORDER BY nn.noticeNum DESC
		OFFSET #{offset} ROWS FETCH FIRST #{rows} ROWS ONLY
	 </select>

    <!-- 글보기 -->
    <select id="readNotice" parameterType="Integer" resultType="com.et.notice.Notice">
		SELECT noticeNum, noticeTitle, noticeContent, nCreated, nhitCount
		FROM notice 
		WHERE noticeNum = #{noticeNum}
	</select>

	<!-- 조회수 증가 -->
	<update id="updateHitCount" parameterType="Integer">
		UPDATE notice SET nhitCount=nhitCount+1 WHERE noticeNum = #{noticeNum}
	</update>

	<!-- 이전글 -->
	<select id="preReadNotice" parameterType="map" resultType="com.et.notice.Notice">
		SELECT noticeNum, noticeTitle
		FROM notice 
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (noticeNum &gt; #{noticeNum})
		</where>
		ORDER BY noticeNum ASC
		FETCH FIRST 1 ROWS ONLY
    </select>

    <!-- 다음글 -->
    <select id="nextReadNotice" parameterType="map" resultType="com.et.notice.Notice">
		SELECT noticeNum, noticeTitle
		FROM notice 
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND (noticeNum &lt; #{noticeNum})
		</where>
		ORDER BY noticeNum DESC
		FETCH FIRST 1 ROWS ONLY
    </select>
    
	<!-- 수정 -->
	<update id="updateNotice" parameterType="com.et.notice.Notice">
		UPDATE notice SET noticeTitle=#{noticeTitle},
				noticeContent=#{noticeContent} 
		WHERE noticeNum=#{noticeNum}
	</update>
    
	<!-- 삭제 -->
	<delete id="deleteNotice" parameterType="Integer">
		DELETE FROM notice WHERE noticeNum=#{noticeNum}
	</delete>
	
	<!-- 파일 -->
	<insert id="insertFile" parameterType="com.et.notice.Notice">
		INSERT INTO noticeFile(noticeFileNum, noticeNum, saveFilename, 
					originalFilename, fileSize) VALUES
				(noticeFile_seq.NEXTVAL, #{noticeNum}, #{saveFilename},
					#{originalFilename}, #{fileSize})
	</insert>
	
	<select id="listFile" parameterType="Integer" resultType="com.et.notice.Notice">
		SELECT noticeFileNum, noticeNum, saveFilename, originalFilename, fileSize
		FROM noticeFile
		WHERE noticeNum=#{noticeNum}    
	</select>
	
	<select id="readFile" parameterType="Integer" resultType="com.et.notice.Notice">
		SELECT noticeFileNum, noticeNum, saveFilename, originalFilename, fileSize
		FROM noticeFile
	    WHERE noticeFileNum=#{noticeFileNum}      
	</select>
	
	<delete id="deleteFile" parameterType="map">
		DELETE FROM noticeFile WHERE ${field} = #{noticeNum}
	</delete>
</mapper>